<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/MA_LE12</text>
    </category>
    <info format="html">
      <text></text>
    </info>
    <idnumber>MA_LE12</idnumber>
  </question>

<!-- question: 1258358  -->
  <question type="ddwtos">
    <name>
      <text>MAT_LE12_29_Vorgehen_Extremwertaufgabe</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p> Beim Lösen einer Extremwertaufgabe gehen wir wie folgt vor:<br>
<ul>
<li>Zuerst wird eine [[1]] aufgestellt. Dies ist eine Formel, die mehrere Variablen enthält und deren Wert minimiert oder maximiert werden soll. </li>
<li>Dann wird eine [[2]] aufgestellt. Wenn die [[1]] mehr als zwei Variablen enthält, dann reicht eine [[2]] nicht aus, es werden mehrere benötigt.</li>
<li>Nun wird die [[2]] (oder auch mehrere) umgeformt und in die [[1]] so eingesetzt, dass eine [[3]] entsteht, die nur noch von einer Variablen abhängt. </li>
<li>Für die [[3]] wird ein zum Problem passender, sinnvoller Definitionsbereich gewählt. </li>
<li>Mit der [[4]] werden kritische Punkte der [[3]] bestimmt und mit der [[7]] auf Extrema untersucht. </li>
<li>Ist ein [[5]] im Definitionsbereich gefunden, so wird über das Verhalten am Rand des Definitionsbereiches überprüft, ob es sich um ein [[6]] handelt. </li>
<li> Ist ein [[6]] gefunden, können über das Einsetzen in die [[2]] (oder auch mehrere) die anderen Variablen berechnet werden. </li>
<li>Werden diese gefundenen Lösungen in die [[1]] eingesetzt, so erhalten wir den Wert des gesuchten Optimums.</li>
</ul>
</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>4.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber>MAT_LE12_29</idnumber>
    <shuffleanswers>1</shuffleanswers>
    <correctfeedback format="markdown">
      <text><![CDATA[<p> Sehr gut! Ihre Antworten sind richtig. </p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="markdown">
      <text><![CDATA[<p> Ihre Antworten sind teilweise richtig. Versuchen Sie es noch einmal!</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="markdown">
      <text><![CDATA[<p> Ihre Antworten sind leider falsch. Versuchen Sie es noch einmal! </p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <dragbox>
      <text>Hauptbedingung</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>Nebenbedingung</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>Zielfunktion</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>1. Ableitung</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>lokales Extremum</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>globales Extremum</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>2. Ableitung</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 1: </b> </p>
<p> Verschieben Sie die Begriffe in die passenden Felder. Die einzelnen Begriffe werden unterschiedlich oft gebraucht. </p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 2: </b> </p>
<p> Schauen Sie in die Beispiele in diesem Abschnitt. Dort werden die gesuchten Begriffe verwendet. </p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 3 - Musterlösung: </b> </p>
<p> Beim Lösen einer Extremwertaufgabe gehen wir wie folgt vor:<br>
<ul>
<li>Zuerst wird eine <b>Hauptbedingung</b> aufgestellt. Dies ist eine Formel, die mehrere Variablen enthält und deren Wert minimiert oder maximiert werden soll. </li>
<li>Dann wird eine <b>Nebenbedingung</b> aufgestellt. Wenn die <b>Hauptbedingung</b> mehr als zwei Variablen enthält, dann reicht eine <b>Nebenbedingung</b> nicht aus, es werden mehrere benötigt.</li>
<li>Nun wird die <b>Nebenbedingung</b> (oder auch mehrere) umgeformt und in die <b>Hauptbedingung</b> so eingesetzt, dass eine <b>Zielfunktion</b> entsteht, die nur noch von einer Variablen abhängt. </li>
<li>Für die <b>Zielfunktion</b> wird ein zum Problem passender, sinnvoller Definitionsbereich gewählt. </li>
<li>Mit der <b>1. Ableitung</b> werden kritische Punkte der <b>Zielfunktion</b> bestimmt und mit der <b>2. Ableitung</b> auf Extrema untersucht. </li>
<li>Ist ein <b>lokales Extremum</b> im Definitionsbereich gefunden, so wird über das Verhalten am Rand des Definitionsbereiches überprüft, ob es sich um ein <b>globales Extremum</b> handelt. </li>
<li> Ist ein <b>globales Extremum</b>  gefunden, können über das Einsetzen in die <b>Nebenbedingung</b> (oder auch mehrere) die anderen Variablen berechnet werden. </li>
<li>Werden diese gefundenen Lösungen in die <b>Hauptbedingung</b> eingesetzt, so erhalten wir den Wert des gesuchten Optimums.</li>
</ul>
</p>]]></text>
    </hint>
  </question>

<!-- question: 1258278  -->
  <question type="shortanswer">
    <name>
      <text>MA_LE12_14_Aufloesung</text>
    </name>
    <questiontext format="markdown">
      <text>Fügen Sie hier das Lösungswort ein, um eine Münze zu erhalten:</text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_14</idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>Extremum</text>
      <feedback format="markdown">
        <text><![CDATA[Richtig!
[stashdrop secret="UdWRFG" image]]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 1258272  -->
  <question type="stack">
    <name>
      <text>MA_LE12_12_kritische Punkte</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei die Funktion
\[f: \mathbb{R} \to \mathbb{R} \quad \text{mit} \quad f(t)=t^2+4t+3\]</p>
<p>Berechnen Sie Menge \(K\) der kritischen Punkte dieser Funktion:</p>
<p>\(K=\) [[input:ans1]] [[validation:ans1]]</p>
<p> <i>Geben Sie Ihre Lösung als Menge an, z.B. <code>{a,b}</code></i></p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_12</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>ta1: set(-2);</text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ta1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ta1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[Ihre Lösung ist richtig!
[stashdrop secret="9sqA6B" image]]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text>Leider ist Ihre Lösung falsch, versuchen Sie es noch einmal!</text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong> Hinweis 1:</strong><br>
<p>Sie sollen in dieser Aufgabe die kritischen Punkte einer Funktion berechnen. Die Definition 12.3 sagt Ihnen, wie ein kritischer Punkt definiert ist.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong> Hinweis 2:</strong><br>
<p>Um einen kritischen Punkt einer Funktion \(f\) zu berechnen, müssen Sie zuerst die Ableitung der Funktion bestimmen. Dann müssen Sie die Nullstellen der Ableitung berechnen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong> Hinweis 3 - Musterlösung:</strong><br>
<p>Um einen kritischen Punkt einer Funktion \(f\) zu berechnen, bestimmen wir zuerst die Ableitung von \(f\). <br>
Es gilt: \(f'(t)=2t+4\). <br>
Die Nullstellen der Ableitung erhalten wir, indem wir die Gleichung \(2t+4=0\) nach \(t\) auflösen. Wir erhalten einen kritischen Punkt \(t_0=-2\).<br>
Die Eingabe der Lösung soll als Menge erfolgen. Wir tragen daher in das Antwortfeld \(K=\)<code>{-2}</code> ein.</p>
<p> Vielleicht ist Ihnen dies bei der Rechnung bereits aufgefallen: Der kritische Punkt der quadratischen Funktion in diesem Beispiel liegt genau im Scheitelpunkt der Funktion. Die Tangente im Scheitelpunkt hat Steigung null.</p>]]></text>
    </hint>
  </question>

<!-- question: 1258260  -->
  <question type="stack">
    <name>
      <text>MA_LE12_15b_n-te_Ableitungen</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Berechnen Sie die ersten drei Ableitungen der folgenden Funktion:
\[f(x)=e^{5x}\]</p>
<p>\(f'(x)=\) [[input:ans1]] [[validation:ans1]]</p>
<p>\(f''(x)=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(f'''(x)=\) [[input:ans3]] [[validation:ans3]]</p>
[[feedback:prt1]]

<p>Fällt Ihnen ein Muster in den Ableitungen auf?
Bestimmen Sie nun auch die \(n\)-te Ableitung:</p>
<p>\(f^{\left(n\right)}(x)=\) [[input:ans4]] [[validation:ans4]]</p>
[[feedback:prt2]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_15b</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>f: e^(5*x);
tans1: 5*f;
tans2: 5^2*f;
tans3: 5^3*f;
tans4: 5^n*f;</text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tans2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>tans3</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>tans4</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 1. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 1. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 2. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 2. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>tans3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 3. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 3. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>tans4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die \(n\)-te Ableitung ist richtig.</p>
[stashdrop secret="S8gstK" image]]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die \(n\)-te Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p>Berechnen Sie zuerst die 1. Ableitung. Wenn Sie diese wieder ableiten, erhalten Sie die 2. Ableitung. Wenn Sie die 2. Ableitung dann noch einmal ableiten, erhalten Sie die 3. Ableitung.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p>Haben Sie noch keine Idee, wie die \(n\)-te Ableitung aussehen könnte? Dann berechnen Sie noch die 4. und 5. Ableitung. Vielleicht erkennen Sie dann das Ableitungsmuster.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>
<p>Die ersten drei Ableitungen lauten:<br>
\(f'(x)={@tans1@}\)<br>
\(f''(x)={@tans2@}\)<br>
\(f'''(x)={@tans3@}\)<br>
Wir beobachten, dass bei jedem Ableiten die innere Ableitung der Funktion als Vorfaktor \(5\) hinzukommt. Die \(n\)-te Ableitung lautet daher \(f^{\left(n\right)}(x)={@tans4@}\).</p>]]></text>
    </hint>
  </question>

<!-- question: 1258273  -->
  <question type="stack">
    <name>
      <text>MA_LE12_17_hinreichendes Kriterium</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei die Funktion
\[f: \mathbb{R} \to \mathbb{R} \quad \text{mit} \quad f(x)=x^3-4x^2-3x+1\]</p>
<p>Rechnen Sie nach, dass in \(x_0=3\) ein kritischer Punkt vorliegt und überprüfen Sie, ob in diesem Punkt ein lokales Extremum vorliegt.</p>
<p>In \(x_0=3\) liegt [[input:ans1]].  [[validation:ans1]]</p>

[[feedback:prt1]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_17</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,true, "ein lokales Minimum vor"],[2,false,"ein lokales Maximum vor"],[3,false,"kein lokales Extremum vor"] ];

L1:random_permutation(L1);]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text>L1:random_permutation(L1);</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text>Ihre Lösung ist richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text>Leider ist Ihre Lösung falsch, versuchen Sie es noch einmal!</text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong> Hinweis 1:</strong><br>
<p>Sie sollen in dieser Aufgabe zuerst nachrechnen, das \(x_0=3\) ein kritischer Punkt ist. Hierzu bestimmen Sie zuerst die 1. Ableitung und setzen \(x_0\) in diese ein. Dies ist das <i>notwendige Kriterium</i>. Als <i>hinreichende Kriterien</i> haben Sie im Satz 12.4 zwei zur Auswahl.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong> Hinweis 2:</strong><br>
<p>Beim Vorzeichenwechselkriterium müssen Sie überprüfen, welches Vorzeichen die Funktionswerte der 1. Ableitung links bzw. rechts von der Nullstelle haben. Beim Kriterium mit der 2. Ableitung müssen Sie die 2. Ableitung von $f$ berechnen und dann an der kritischen Stelle auswerten. </p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong> Hinweis 3 - Musterlösung:</strong><br>
<p>Die 1. Ableitung der Funktion $f$ lautet: $f'(x)=3x^2-8x-3$. Wir setzen $x_0=3$ ein und erhalten
$f'(3)=27-24-3=0$. Also ist $x_0=3$ ein kritischer Punkt von $f$. <br>
Es genügt, eines der hinreichenden Kriterien anzuwenden. Wir zeigen hier beide Möglichkeiten:<br>
<i> Vorzeichenwechselkriterium</i><br>
Wir setzen  Punkte nahe bei $x_0=3$ in die erste Ableitung ein und erhalten: $f'(2,5)=-4,25<0$ und $f'(3,5)=5,75>0$. Damit liegt in $x_0=3$ ein lokales Minimum vor.<br>
<i> Kriterium mit der 2. Ableitung</i><br>
Wir berechnen die 2. Ableitung $f''(x)=6x-8$. In diese setzen wir den kritischen Punkt $x_0=3$ ein und erhalten $f''(3)=10>0$. Damit liegt in $x_0=3$ ein lokales Minimum vor.</p>]]></text>
    </hint>
  </question>

<!-- question: 1258256  -->
  <question type="stack">
    <name>
      <text>MA_LE12_20_Graphen_Eigenschaften_zuordnen</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei eine Funktion \(f\), von der Sie bereits die folgenden Eigenschaften kennen:</p>
<ul>
<li>
\(D=\mathbb{R}\setminus\{3\}\)
</li>
<li>
\(f(-3)=f(-1)=f(2)=0\)
</li>
<li>
\(f'(-2)=f'(1)=0\)
</li>
<li>
\(f''(-2)>0\) und \(f''(1)<0\)
</li>
</ul>

<p>Wie könnte eine Skizze der Funktion \(f\) aussehen? Wählen Sie einen passenden Graphen aus: </p>
<p>[[input:ans1]] [[validation:ans1]]</p>
<div class="row row-cols-2 row-cols-xl-3">
  <div class="col" markdown="1">![Aufgabe_Graph1](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20a-grafik-graph-aufgabe.png?v=1707404589) {.img-fluid}<figcaption class="figure-caption text-center">Graph a)</figcaption></div>
  <div class="col" markdown="1">![Aufgabe_Graph3](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20b-grafik-graph-aufgabe.png?v=1707404663) {.img-fluid}<figcaption class="figure-caption text-center">Graph b)</figcaption></div>
  <div class="col" markdown="1">![Aufgabe_Graph3](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20c-grafik-graph-aufgabe.png?v=1707404742) {.img-fluid}<figcaption class="figure-caption text-center">Graph c)</figcaption></div></div>
[[feedback:prt1]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_20</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,true,"Graph a)"],[2, false,"Graph b)"],[3, false,"Graph c)"],[4, false,"Keiner der Graphen passt"]];]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Prima, Ihre Lösung ist richtig!</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Leider ist Ihre Lösung falsch. Versuchen Sie es noch einmal!</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p>Gehen Sie die Eigenschaften der Funktion der Reihe nach durch und überprüfen, welche davon die Graphen a), b) und c) erfüllen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p>Nicht durch jede Eigenschaft können Sie einen Graphen ausschließen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>
<p>
Die Angaben zu den Nullstellen und kritischen Punkten sind für alle drei Graphen erfüllt. Der eingeschränkte Definitionsbereich impliziert, dass Graph c) ausgeschlossen werden kann. Die Informationen über die 2. Ableitungen in den kritischen Punkten legen aber eindeutig fest, dass nur Graph a) passt.</p>]]></text>
    </hint>
  </question>

<!-- question: 1258274  -->
  <question type="stack">
    <name>
      <text>MA_LE12_21_Eigenschaften_ablesen</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei der Graph der folgenden Funktion \(f\):</p>
<center><img src="/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-21-grafik-graph-aufgabe.png" width="50%"></center>

<p>Welche Eigenschaften von \(f\) können Sie aus dem Graphen ablesen? Kreuzen Sie die wahren Aussagen an:</p>
<p>[[input:ans1]] [[validation:ans1]]</p>
<p><i>Überlegen Sie, welche weiteren Eigenschaften Sie aus dem Graphen noch ablesen können?</i></p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_21</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,true, "Der Definitionsbereich ist \\(D=\\mathbb{R}.\\)"],[2,false, "Die Funktion ist punktsymmetrisch."],[3,true, "Die Funktion ist achsensymmetrisch."],[4,false, "Die Nullstellenmenge ist \\(N=\\{-3,-1,0,2,3\\}\\)."],[5,true, "In \\(x_0=0\\) liegt ein kritischer Punkt vor."], [6,false, "Es gibt drei lokale Minima."],  [8,true, "\\(\\lim\\limits_{x \\to \\infty}f(x)=-\\infty\\)"]];]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text><![CDATA[[stashdrop secret="xMLHVf" image]]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>checkbox</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>SansM: setify(ans1);
TansM: set(1,3,5,8);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>SansM</sans>
        <tans>TansM</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Prima, Ihre Lösung ist richtig!</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Leider ist Ihre Lösung falsch. Versuchen Sie es noch einmal!</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p> Schauen Sie auf den Graphen. Welche der Aussagen treffen auf die skizzierte Funktion zu? Falls Ihnen die Bedeutung einer dieser Eigenschaften nicht mehr ganz klar ist, so schlagen Sie Sie weiter oben nach.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p> \(4\) Aussagen sind wahr, \(3\) sind falsch.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>
<p> Der Definitionsbereich ist \(D=\mathbb{R}\), denn wir sehen keine Definitionslücken. Die Funktion ist nicht punktsymmetrisch sondern achsensymmetrisch. Die Nullstellenmenge ist \(N=\{-3,-2,-1,1,2,3\}\), nicht die in der Aufgabe genannte Menge. In \(x_0=0\) liegt ein kritischer Punkt vor, insbesondere sehen wir dort ein lokales bzw. globales Maximum. Es gibt nur  lokale Minima, auch diese Information können wir aus dem Graphen ablesen.
Es gilt \(\lim\limits_{x \to \infty}f(x)=-\infty\).</p>]]></text>
    </hint>
  </question>

<!-- question: 1258275  -->
  <question type="stack">
    <name>
      <text>MA_LE12_24deL'Hospital</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Gesucht ist der Grenzwert:
\[\lim\limits_{x\to 0} \frac{\sin(3x)}{e^{5x}-1}\]</p>

<p>Sowohl im Zähler als auch im Nenner treten nur differenzierbare Funktionen auf. Wir dürfen die Regel von de l'Hospital anwenden, denn es liegt der Fall [[input:ans1]] vor. [[validation:ans1]]<br>
Der Grenzwert lautet:<br><br>

\(\lim\limits_{x\to 0} \frac{\sin(3x)}{e^{5x}-1}=\) [[input:ans2]][[validation:ans2]]

[[feedback:prt1]]]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_24</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,true,"\\( 0/0 \\)"],[2, false,"\\(\\infty/\\infty\\)"],[3, false,"\\(\\infty/0\\)"]];
tans2: 3/5;
L1:random_permutation(L1);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text>\(\lim\limits_{x\to 0} \frac{\sin({@b@}x)}{e^{{@a@}x}-1}\)</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tans2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Sie haben den Fall für die Anwendung der Regel von de l'Hospital korrekt bestimmt.<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Sie haben den Fall für die Anwendung der Regel von de l'Hospital leider nicht richtig bestimmt. Berechnen Sie nochmals die Ableitungen des Nenners und des Zählers.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Prima, Sie haben den Grenzwert richtig bestimmt.</p>
[stashdrop secret="qNGUg7" image]]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Leider ist der Grenzwert falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1758188644</deployedseed>
    <deployedseed>1571037552</deployedseed>
    <deployedseed>1943722763</deployedseed>
    <deployedseed>877208337</deployedseed>
    <deployedseed>1786971854</deployedseed>
    <deployedseed>1969536140</deployedseed>
    <deployedseed>1057561883</deployedseed>
    <deployedseed>1526505477</deployedseed>
    <deployedseed>2146332014</deployedseed>
    <deployedseed>854417348</deployedseed>
    <deployedseed>1840199889</deployedseed>
    <deployedseed>1196450776</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <testinput>
        <name>ans1</name>
        <value>tans1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <testinput>
        <name>ans1</name>
        <value>0</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-1-F</expectedanswernote>
      </expected>
    </qtest>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p> Die Regel von de l'Hospital enthält mehrere Voraussetzungen, die zuerst überprüft werden müssen:
<ul>
<li>
Ist der Term, von dem der Grenzwert bestimmt werden soll, ein Bruch? </li>
<li>Ist der Nenner differenzierbar und ist der Zähler differenzierbar? </li>
<li>Sind die Grenzwerte des Nenners und des Zählers beide null oder beide unendlich?</li>
</ul></p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p>Wenn die Voraussetzungen der Regel von de l'Hospital erfüllt sind, müssen Sie den Nenner und den Zähler des Terms separat ableiten. Bestimmen Sie danach den Grenzwert erneut.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>
<p>Der Term, von dem der Grenzwert gebildet werden soll, ist ein Bruch. Der Zähler hat als Grenzwert
\[\lim\limits_{x\to 0}\sin(3x)=\sin(\lim\limits_{x\to 0}3x)=0\]
Der Nenner hat als Grenzwert
\[\lim\limits_{x\to 0}e^{5x}-1=e^{\lim\limits_{x\to 0}5x}-1=1-1=0\]
Bei der Grenzwertberechnung wurde beide Male ausgenutzt, dass die Funktionen \(\sin(x)\) und \(e^x\) stetig sind. Beide Funktionen sind außerdem differenzierbar. <br>
Damit sind alle Voraussetzungen der Regel von de l'Hospital erfüllt und wir können sie anwenden. Wir leiten daher Nenner und Zähler ab und erhalten:

\[\lim\limits_{x\to 0} \frac{\sin(3x)}{e^{5x}-1}= \lim\limits_{x\to 0} \frac{3\cdot \cos(3x)}{5\cdot e^{5x}}\]

Bilden wir nun die Grenzwerte des Nenners und Zählers, so erhalten wir
\[\lim\limits_{x\to 0}3\cdot \cos(3x)=3\cdot \cos(\lim\limits_{x\to 0}3x)=3\cdot \cos(0)=3\] und
\[\lim\limits_{x\to 0}5\cdot e^{5x}=5\cdot e^{\lim\limits_{x\to 0}5x}=5\cdot e^0=5\]
Damit folgt:
\[\lim\limits_{x\to 0} \frac{\sin(3x)}{e^{5x}-1}= \lim\limits_{x\to 0} \frac{3\cdot \cos(3x)}{5\cdot e^{5x}}=\frac{3}{5}\]]]></text>
    </hint>
  </question>

<!-- question: 1258342  -->
  <question type="stack">
    <name>
      <text>MA_LE12_26_mehrdim_Funktionswerte</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei die Funktion \(f: \mathbb{R}^3 \to \mathbb{R}\) mit
\[f(x,y,z)=\ln(x^2+2)\cdot \cos((y-z)\pi)+3.\]</p>
<p>Berechnen Sie </p>

<p>\(f(1,2,2)=\) [[input:ans1]] [[validation:ans1]]</p>
[[feedback:prt1]]
<p> und</p>
<p>\(f(-1,1,\frac{1}{2})=\) [[input:ans2]] [[validation:ans2]]</p>
[[feedback:prt2]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_26</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>tans1: ln(3)*1+3;
tans2: ln(3)*0+3;</text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tans2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text>Richtig, Sie haben den Funktionswert korrekt bestimmt.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text>Leider ist Ihre Lösung falsch. Versuchen Sie es noch einmal!</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text>Richtig, Sie haben den Funktionswert korrekt bestimmt.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text>Leider ist Ihre Lösung falsch. Versuchen Sie es noch einmal!</text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p>Beachten Sie die Definition einer Funktion mehrerer Variablen. Setzen Sie den Punkt \((1,2,2)\) in die Funktion ein.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p>Schlagen Sie die Funktionswerte der Cosinusfunktion in Lerneinheit 7 nach, falls Sie diese nicht mehr parat haben.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>
<p>Es gilt:
\[f(1,2,2)=\ln(1^2+2)\cdot \cos((2-2)\pi)+3=\ln(3)\cdot \cos(0)+3=\ln(3) + 3\]
und
\[f(-1,1,\frac{1}{2})=\ln((-1)^2+2)\cdot \cos((1-\frac{1}{2})\pi)+3=\ln(3)\cdot \cos(\frac{\pi}{2})+3\]
\[=\ln(3)\cdot 0 + 3=3.\]</p>]]></text>
    </hint>
  </question>

<!-- question: 1258198  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_08_JSX_Tangente_an_Polynom_5.Grades</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[[[jsxgraph]]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-5, 6, 5, -6], axis: true, keepaspectratio:true, showcopyright: false});

var fx = function(x){return 0.05*x*(x+3)*(x+2)*(x-2)*(x-4)};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
var p = board.create('glider',[0,3,curve]);

var d = board.create('derivative', [curve], {visible: false});
var dp = board.create('glider',[function(){ return p.X();}, function(){ return JXG.Math.Numerics.D(fx)(p.X());}, d], {visible: false});

var t = board.create('tangent', [p]);

var txt = board.create('text', [-6, 3, function () {
                  return "f'(a) = " + (Number(JXG.Math.Numerics.D(fx)(p.X())).toFixed(2));
                   }], {fontSize: 16, fixed:true});

board.unsuspendUpdate();
[[/jsxgraph]]
<p> [[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>0.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 1:</b><br>
Berechnen Sie zuerst den Scheitelpunkt der Funktion \(f(x)\). Verwenden Sie hierzu die gerade eingeführte Formel
\(S=(-s,d)=(-\frac{b}{2a}, - \frac{b^2}{4a^2} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 2:</b><br>
In diesem Beispiel gilt \(a=1\). Die Berechnungsformel für den Scheitelpunkt vereinfacht sich zu \(S=(-s,d)=(-\frac{b}{2}, - \frac{b^2}{4} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 3 - Musterlösung:</b><br>
Über die quadratische Ergänzung formen wir die Funktion um:
\[f(x)=x^2-4x+1=(x-2)^2-3\]
Den Scheitelpunkt können wir dann ablesen. Er lautet \(S=(2,-3)\). Über die Schieberegler muss dann dieser Scheitelpunkt eingestellt werden.

<div class="container">

<div  style="width: 50%;">
<jsxgraph>
    var board = JXG.JSXGraph.initBoard(BOARDID, {
        boundingbox:[-5,5,5,-5],
        axis: true,
        showCopyright: false,
        showNavigation: false,
        pan: {
            enabled: false
        },
        zoom: {
            enabled: false
        }
    });
var fx = function(x){return (x-2)*(x-2) - 3};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
</jsxgraph>
</div></div>]]></text>
    </hint>
  </question>

<!-- question: 1258199  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_11_JSX_Tangente_an_x_hoch_3</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[[[jsxgraph]]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-5, 5, 5, -5], axis: true, keepaspectratio:true, showcopyright: false});

var fx = function(x){return x*x*x};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
var p = board.create('glider',[1,1,curve]);

var t = board.create('tangent', [p]);

board.unsuspendUpdate();
[[/jsxgraph]]
<p> [[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>0.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 1:</b><br>
Berechnen Sie zuerst den Scheitelpunkt der Funktion \(f(x)\). Verwenden Sie hierzu die gerade eingeführte Formel
\(S=(-s,d)=(-\frac{b}{2a}, - \frac{b^2}{4a^2} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 2:</b><br>
In diesem Beispiel gilt \(a=1\). Die Berechnungsformel für den Scheitelpunkt vereinfacht sich zu \(S=(-s,d)=(-\frac{b}{2}, - \frac{b^2}{4} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 3 - Musterlösung:</b><br>
Über die quadratische Ergänzung formen wir die Funktion um:
\[f(x)=x^2-4x+1=(x-2)^2-3\]
Den Scheitelpunkt können wir dann ablesen. Er lautet \(S=(2,-3)\). Über die Schieberegler muss dann dieser Scheitelpunkt eingestellt werden.

<div class="container">

<div  style="width: 50%;">
<jsxgraph>
    var board = JXG.JSXGraph.initBoard(BOARDID, {
        boundingbox:[-5,5,5,-5],
        axis: true,
        showCopyright: false,
        showNavigation: false,
        pan: {
            enabled: false
        },
        zoom: {
            enabled: false
        }
    });
var fx = function(x){return (x-2)*(x-2) - 3};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
</jsxgraph>
</div></div>]]></text>
    </hint>
  </question>

<!-- question: 1258359  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_30-Extremwertaufgabe_geführt</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><b>Die perfekte Geschenkverpackung</b></p>
<p>Es soll eine quaderförmige Geschenkverpackung mit einem Volumen von \(50~\mathrm{cm}^3\) gebastelt werden. Die Höhe der Schachtel ist mit \(5~\mathrm{cm}\) vorgegeben. Die Flächen der geschlossenen Schachtel sollen mit möglichst wenig Geschenkpapier beklebt werden. Welche Abmessungen der Schachtel sollten gewählt werden? Genügt ein Bogen Geschenkpapier mit einer Fläche von \(50~\mathrm{cm}^2\)?<br>
Um diese Extremwertaufgabe zu lösen, benennen wir zuerst die Kantenlängen mit \(x\), \(y\) und \(z\). Für \(z\) ist in der Aufgabenstellung der Wert \(z=5\) vorgegeben. <br>
Die Hauptbedingung ist die Oberfläche der Verpackung. Sie lautet <br>
\(O(x,y,z)=\) [[input:ans1]] [[validation:ans1]][[feedback:prt16]]
Die Nebenbedingungen sind das Volumen der Geschenkverpackung<br>
\(V(x,y,z)= 50 = \) [[input:ans2]] [[validation:ans2]][[feedback:prt2]]
und \(z=\) [[input:ans3]] [[validation:ans3]][[feedback:prt3]]<br>
Setzen wir die Nebenbedingungen in die Hauptbedingung ein, erhalten wir die Zielfunktion<br>
\(\tilde O(x)=\) [[input:ans4]]. [[validation:ans4]][[feedback:prt4]]<br>
Der Definitionsbereich von \(\tilde O(x)\) ist \(D= \) [[input:ans5]] [[validation:ans5]][[feedback:prt5]]<br>
Wir berechnen die 1. Ableitung \(\tilde O'(x)=\) [[input:ans6]] [[validation:ans6]][[feedback:prt6]] und die Menge der kritischen Punkte \(K=\) [[input:ans7]] [[validation:ans7]][[feedback:prt7]] von \(\tilde O(x).\)<br>
(<i>Geben Sie die kritischen Punkte als Menge ein.</i>)<br>
Mit der 2. Ableitung \(\tilde O''(x)\) überprüfen wir, dass in \(x_0=\) [[input:ans8]] [[validation:ans8]][[feedback:prt8]] ein [[input:ans9]] [[validation:ans9]][[feedback:prt9]] vorliegt.<br>
Wir untersuchen nun das Verhalten von \(\tilde O(x)\) an den Rändern des Definitionsbereiches. <br>Es gilt
\(\lim\limits_{x \to 0}\tilde O(x)=\) [[input:ans10]] [[validation:ans10]][[feedback:prt10]] und \(\lim\limits_{x \to \infty}\tilde O(x)=\) [[input:ans11]] [[validation:ans11]][[feedback:prt11]]<br>
Also liegt in \(x_0\) ein [[input:ans12]] [[validation:ans12]][[feedback:prt12]] vor.
Damit ist die Kantenlänge \(x_0\) gefunden. \(z_0=5\) war gegeben, dann ist \(y_0=\) [[input:ans13]] [[validation:ans13]][[feedback:prt13]]. <br> Die minimale Oberfläche beträgt \(O(x_0,y_0,z_0)=\) [[input:ans14]]. [[validation:ans14]][[feedback:prt14]] <br>
Damit ist ein Bogen Geschenkpapier [[input:ans15]] [[validation:ans15]][[feedback:prt15]] zum Bekleben aller Flächen.
</p>

 <!--Anregung für die Aufgabe von: https://www.studysmarter.de/schule/mathe/analysis/extremwertaufgaben/ -->]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MAT_LE12_30</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[tans1: 2*(x*y+y*z+z*x);
tans2: x*y*z;
tans3: 5;
tans4: 20 + 10*x + 100/x;
tans5: [[1,true, "\\((0, \\infty)\\)"], [2,false, "\\([0, \\infty)\\)"], [3,false, "\\(\\mathbb{R}\\)"]];
tans6: 10-100/x^2;
tans7: set(10^(1/2));
tans8: 10^(1/2);
tans9: [[1,true, "lokales Minimum"], [2,false, "lokales Maximum"], [3,false, "globales Minimum"],[4,false, "globales Maximum"] ];
tans10: inf;
tans11: inf;
tans12: [[1,true, "globales Minimum"], [2,false, "globales Maximum"], [3,false, "lokales Minimum"],[4,false, "lokales Maximum"] ];
tans13: 10^(1/2);
tans14: 2*10*10^(1/2)+20;
tans15: [[1,true, "nicht groß genug"],[2,false, "groß genug"]];

tans5:random_permutation(tans5);
tans9:random_permutation(tans9);
tans12:random_permutation(tans12);
tans15:random_permutation(tans15);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text>tans5;</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans10</name>
      <type>algebraic</type>
      <tans>tans10</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans11</name>
      <type>algebraic</type>
      <tans>tans11</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans12</name>
      <type>dropdown</type>
      <tans>tans12</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans13</name>
      <type>algebraic</type>
      <tans>tans13</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans14</name>
      <type>algebraic</type>
      <tans>tans14</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans15</name>
      <type>dropdown</type>
      <tans>tans15</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tans2</tans>
      <boxsize>7</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>tans3</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>tans4</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>dropdown</type>
      <tans>tans5</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>algebraic</type>
      <tans>tans6</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans7</name>
      <type>algebraic</type>
      <tans>tans7</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans8</name>
      <type>algebraic</type>
      <tans>tans8</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans9</name>
      <type>dropdown</type>
      <tans>tans9</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>10</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans11</sans>
        <tans>tans11</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>11</truenextnode>
        <trueanswernote>prt1-11-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-11-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>11</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans12</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>12</truenextnode>
        <trueanswernote>prt1-12-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-12-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>12</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans13</sans>
        <tans>tans13</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>13</truenextnode>
        <trueanswernote>prt1-13-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-13-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>13</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans14</sans>
        <tans>tans14</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>14</truenextnode>
        <trueanswernote>prt1-14-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-14-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>14</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans15</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-15-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Prima! Sie haben alle Felder richtig ausgefüllt!
[stashdrop secret="TgIQTL"  image]]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-15-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>tans3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>tans4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>4</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>4</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>5</truenextnode>
        <trueanswernote>prt1-5-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-5-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>5</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>tans6</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>6</truenextnode>
        <trueanswernote>prt1-6-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-6-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>6</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans7</sans>
        <tans>tans7</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>7</truenextnode>
        <trueanswernote>prt1-7-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-7-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>7</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans8</sans>
        <tans>tans8</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>8</truenextnode>
        <trueanswernote>prt1-8-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-8-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>8</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans9</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>9</truenextnode>
        <trueanswernote>prt1-9-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-9-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>9</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans10</sans>
        <tans>tans10</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>10</truenextnode>
        <trueanswernote>prt1-10-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-10-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt10</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans10</sans>
        <tans>tans10</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt10-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Der Grenzwert ist richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt10-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Der Grenzwert ist leider falsch.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt11</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans11</sans>
        <tans>tans11</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt11-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Der Grenzwert ist richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt11-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Der Grenzwert ist leider falsch.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt12</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans12</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt12-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt12-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Ihre Auswahl ist falsch. Anhand der Grenzwerte können wir eine globale Aussage über das Extremum treffen.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt13</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans13</sans>
        <tans>tans13</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt13-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Ihre Lösung ist richtig.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt13-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Leider haben Sie \(y_0\) falsch berechnet. Sie können  \(y_0\) anhand der Nebenbedingung bestimmen.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt14</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans14</sans>
        <tans>tans14</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt14-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Die Gesamtoberfläche ist richtig.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt14-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Die Gesamtoberfläche ist leider falsch. Haben Sie \(x_0\) oder \(y_0\) falsch bestimmt, so könnte auch ein Folgefehler vorliegen.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt15</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans15</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt15-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Ihre Auswahl ist richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt15-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Leider ist ihre Auswahl falsch.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt16</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt16-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Sie haben die Hauptbedingung richtig aufgestellt.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt16-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Leider ist Ihre Hauptbedingung falsch.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Sie haben die Nebenbedingung richtig aufgestellt.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Leider ist Ihre Nebenbedingung falsch.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>tans3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Leider ist dies falsch. Lesen Sie noch einmal die Aufgabenstellung.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>tans4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Ihre Zielfunktion ist richtig.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Ihre Zielfunktion ist leider falsch.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Ihre Auswahl des Definitionsbereiches ist richtig.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Ihre Auswahl des Definitionsbereiches ist leider falsch. Denken Sie an die Aufgabenstellung. Welche Werte kann \(x\) annehmen?</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>dtans6: diff(ans4,x);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>tans6</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Sie haben die Ableitung richtig berechnet.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>dtans6</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-2-T</trueanswernote>
        <truefeedback format="html">
          <text>Sie haben Ihre falsche Zielfunktion korrekt abgeleitet.</text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-2-F</falseanswernote>
        <falsefeedback format="html">
          <text>Leider ist die Ableitung falsch.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt7</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>ftans7: set(10^(1/2),-10^(1/2));</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans7</sans>
        <tans>tans7</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt7-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Die Menge der kritischen Punkte ist richtig! Sie besteht nur aus einem Element.</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt7-1-F</falseanswernote>
        <falsefeedback format="html">
          <text></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans7</sans>
        <tans>ftans7</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt7-2-T</trueanswernote>
        <truefeedback format="html">
          <text>Sie haben korrekt die Lösungsmenge der quadratischen Gleichung bestimmt.
Sie haben aber nicht den eingeschränkten Definitionsbereich beachtet.</text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt7-2-F</falseanswernote>
        <falsefeedback format="html">
          <text>Die Menge der kritischen Punkte ist falsch.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt8</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans8</sans>
        <tans>tans8</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt8-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt8-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Leider ist der kritische Punkt falsch. Überprüfen Sie Ihre Zielfunktion und Ihre Ableitung, vielleicht liegt ein Folgefehler vor.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt9</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans9</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.05</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt9-1-T</trueanswernote>
        <truefeedback format="html">
          <text>Richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt9-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Leider ist Ihre Auswahl falsch. Beachten Sie, dass Sie über die zweite Ableitung nur lokale Aussagen über Extrema erhalten können.</text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="html">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p>Gehen Sie die Feedbacks zu den einzelnen Feldern der Reihe nach durch. Möglicherweise führen Folgefehler dazu, dass spätere Einträge falsch sind.</p>]]></text>
    </hint>
    <hint format="html">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p>Die Hauptbedingung ist die Oberfläche der Verpackung. Sie lautet \(O(x,y,z)=2(x\cdot y + y \cdot z + x \cdot z)\). <br>
Die Nebenbedingungen sind das Volumen der Geschenkverpackung \(V(x,y,z)= 50 = x \cdot y \cdot z \)
und \(z=5\). Stellen Sie nun die Zielfunktion auf.</p>]]></text>
    </hint>
    <hint format="html">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>

<p>Es soll eine quaderförmige Geschenkverpackung mit einem Volumen von \(50~\mathrm{cm}^3\) gebastelt werden. Die Höhe der Schachtel ist mit \(5~\mathrm{cm}\) vorgegeben. Die Flächen der geschlossenen Schachtel sollen mit möglichst wenig Geschenkpapier beklebt werden. Welche Abmessungen der Schachtel sollten gewählt werden? Genügt ein Bogen Geschenkpapier mit einer Fläche von \(50~\mathrm{cm}^2\)?<br><br>
Um diese Extremwertaufgabe zu lösen, benennen wir zuerst die Kantenlängen mit \(x\), \(y\) und \(z\). Für \(z\) ist in der Aufgabenstellung der Wert \(z=5\) vorgegeben. <br>
Die Hauptbedingung ist die Oberfläche der Verpackung. Sie lautet
\(O(x,y,z)=2(x\cdot y + y\cdot z + x \cdot z)\). <br>
Die Nebenbedingungen sind das Volumen der Geschenkverpackung
\(V(x,y,z)= 50 = x \cdot y \cdot z \) und \(z=5\).<br>
Setzen wir die Nebenbedingungen in die Hauptbedingung ein, erhalten wir die Zielfunktion<br>
\(\tilde O(x)=20 + 10\cdot x + \frac{100}{x}\).<br>
Der Definitionsbereich von \(\tilde O(x)\) ist \(D=(0, \infty) \).<br>
Wir berechnen die 1. Ableitung \(\tilde O'(x)=10-\frac{100}{x^2}\) und die Menge der kritischen Punkte \(K=\{\sqrt{10}\}\) von \(\tilde O(x).\)<br>
(<i>Geben Sie die kritischen Punkte als Menge ein.</i>)<br>
Mit der 2. Ableitung \(\tilde O''(x)\) überprüfen wir, dass in \(x_0=\sqrt{10}\) ein lokales Minimum vorliegt.<br>
Wir untersuchen nun das Verhalten von \(\tilde O(x)\) an den Rändern des Definitionsbereiches. <br>Es gilt
\(\lim\limits_{x \to 0}\tilde O(x)=\infty\) und \(\lim\limits_{x \to \infty}\tilde O(x)=\infty\) <br>
Also liegt in \(x_0\) ein globales Minimum vor.
Damit ist die Kantenlänge \(x_0\) gefunden. \(z_0=5\) war gegeben. Dann ist \(y_0=\sqrt{10}\). <br> Die minimale Oberfläche beträgt \(O(x_0,y_0,z_0)=20\cdot \sqrt{10}+20\) <br>
Damit ist ein Bogen Geschenkpapier nicht groß genug zum Bekleben aller Flächen.
</p>]]></text>
    </hint>
  </question>

<!-- question: 1258340  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_34b_Krümmungsverhalten</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Ergänzen Sie den folgenden Text:<br>
Sei \(f:D \to \mathbb{R}\) mit \(D \subseteq \mathbb{R}\) eine mindestens zweimal stetig differenzierbare Funktion. <br>
Wir beobachten, dass wenn der Graph einer Funktion \(f\) in einem Intervall \(I_1 \subset D\) linksgekrümmt ist, seine Steigung kontinuierlich [[input:ans1]]. [[validation:ans1]][[feedback:prt1]] Die Steigung wird über die erste Ableitung \(f'\) beschrieben, daher ist Ableitungsfunktion [[input:ans2]]. [[validation:ans2]][[feedback:prt2]] Dies bedeutet, dass die Ableitung von \(f'\), die wir mit \(f''\) bezeichnen, im Intervall \(I_1\) [[input:ans3]] ist. [[validation:ans3]][[feedback:prt3]]</p>

<p>Ist der Graph einer Funktion \(f\) in einem Intervall \(I_2 \subset D\) rechtsgekrümmt, so nimmt seine Steigung kontinuierlich [[input:ans4]]. [[validation:ans4]][[feedback:prt4]] Die Ableitungsfunktion \(f'\) ist dann [[input:ans5]]. [[validation:ans5]][[feedback:prt5]] Dann ist in die zweite Ableitung \(f''\) im Intervall \(I_2\) [[input:ans6]]. [[validation:ans6]][[feedback:prt6]]</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.0000000</penalty>
    <hidden>0</hidden>
    <idnumber>MAT_LE12_34b</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [ [1, true, "zunimmt"], [2, false, "abnimmt"]];
L2: [ [1, true, "monoton wachsend"], [2, false, "monoton fallend"]];
L3: [ [1, true, "positiv"], [2, false, "negativ"]];

L4: [ [1, false, "zu"], [2, true, "ab"]];
L5: [ [1, false, "monoton wachsend"], [2, true, "monoton fallend"]];
L6: [ [1, false, "positiv"], [2, true, "negativ"]];

L1:random_permutation(L1);
L2:random_permutation(L2);
L3:random_permutation(L3);
L4:random_permutation(L4);
L5:random_permutation(L5);
L6:random_permutation(L6);]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text>L1;</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>dropdown</type>
      <tans>L2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>dropdown</type>
      <tans>L3</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>dropdown</type>
      <tans>L4</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>dropdown</type>
      <tans>L5</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>dropdown</type>
      <tans>L6</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>richtige_Antwort_T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p> Sehr gut! Die Antwort ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>falsche_Antwort_F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p> Ihre Antwort ist leider falsch. </p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p> Sehr gut! Die Antwort ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p> Ihre Antwort ist leider falsch. </p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt3</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt3-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p> Sehr gut! Die Antwort ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt3-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p> Ihre Antwort ist leider falsch. </p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt4</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt4-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p> Sehr gut! Die Antwort ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt4-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p> Ihre Antwort ist leider falsch. </p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt5</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt5-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p> Sehr gut! Die Antwort ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt5-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p> Ihre Antwort ist leider falsch. </p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt6</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt6-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p> Sehr gut! Die Antwort ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt6-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p> Ihre Antwort ist leider falsch. </p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <qtest>
      <testcase>1</testcase>
      <testinput>
        <name>ans1</name>
        <value>1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>falsche_Antwort_F</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <testinput>
        <name>ans1</name>
        <value>2</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>richtige_Antwort_T</expectedanswernote>
      </expected>
    </qtest>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 1:</b> </p>
<p> Überlegen Sie, wie sich die Funktion bei Veränderung der Parameter verhält. Beobachten Sie die Tangenten in der Animation oberhalb der Aufgabe.  </p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 2:</b> </p>
<p> Es ist hilfreich, sich vorzustellen, dass Sie den Graphen mit einem Fahrrad entlangfahren. Dann können Sie sicherlich die Konsequenzen des Krümmungsverhaltens leichter erkennen. </p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 3 -  Musterlösung: </b> </p>
<p> Sei \(f:D \to \mathbb{R}\) mit \(D \subseteq \mathbb{R}\) eine mindestens zweimal stetig differenzierbare Funktion. <br>
Wir beobachten, dass wenn der Graph einer Funktion \(f\) in einem Intervall \(I_1 \subset D\) linksgekrümmt ist, seine Steigung kontinuierlich <b>zunimmt</b>. Die Steigung wird über die erste Ableitung \(f'\) beschrieben, daher ist Ableitungsfunktion <b>monoton wachsend</b>. Dies bedeutet, dass die Ableitung von \(f'\), die wir mit \(f''\) bezeichnen, im Intervall \(I_1\) <b>positiv</b> ist. </p>

<p>Ist der Graph einer Funktion \(f\) in einem Intervall \(I_2 \subset D\) rechtsgekrümmt, so nimmt seine Steigung kontinuierlich <b>ab</b>. Die Ableitungsfunktion \(f'\) ist dann <b>monoton fallend</b>. Dann ist in die zweite Ableitung \(f''\) im Intervall \(I_2\) <b>negativ</b>.</p></p>]]></text>
    </hint>
  </question>

<!-- question: 1258341  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_JSX_Extremwertproblem_Rechteck</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[[[jsxgraph]]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-1, 11, 11, -1], axis: true, keepaspectratio:true, showcopyright: false});

var curve = board.create('line', [[0, 0], [10, 0]], {straightFirst:false, straightLast:false, fixed: true, visible: false, name: 'test'});
var p = board.create('glider', [3, 0, curve]);
var q = board.create('point', [function () { return p.X(); } , function () { return 10 - p.X(); }], {visible: false});
var r = board.create('point', [0 , function () { return 10 - p.X(); }], {visible: false});
var s = board.create('point', [0 , 0], {visible: false});


var pol = board.create('polygon', [p, q, r, s], {strokecolor:'#00a0a2', color:'#f0db9f'});

var txt = board.create('text', [1, 1.5, function () {
                  return "A(Rechteck) = " + (Number((p.X()*(10 - p.X()))).toFixed(2));
                   }], {fontSize: 14});

board.unsuspendUpdate();
[[/jsxgraph]]
<p> [[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>0.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 1:</b><br>
Berechnen Sie zuerst den Scheitelpunkt der Funktion \(f(x)\). Verwenden Sie hierzu die gerade eingeführte Formel
\(S=(-s,d)=(-\frac{b}{2a}, - \frac{b^2}{4a^2} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 2:</b><br>
In diesem Beispiel gilt \(a=1\). Die Berechnungsformel für den Scheitelpunkt vereinfacht sich zu \(S=(-s,d)=(-\frac{b}{2}, - \frac{b^2}{4} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 3 - Musterlösung:</b><br>
Über die quadratische Ergänzung formen wir die Funktion um:
\[f(x)=x^2-4x+1=(x-2)^2-3\]
Den Scheitelpunkt können wir dann ablesen. Er lautet \(S=(2,-3)\). Über die Schieberegler muss dann dieser Scheitelpunkt eingestellt werden.

<div class="container">

<div  style="width: 50%;">
<jsxgraph>
    var board = JXG.JSXGraph.initBoard(BOARDID, {
        boundingbox:[-5,5,5,-5],
        axis: true,
        showCopyright: false,
        showNavigation: false,
        pan: {
            enabled: false
        },
        zoom: {
            enabled: false
        }
    });
var fx = function(x){return (x-2)*(x-2) - 3};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
</jsxgraph>
</div></div>]]></text>
    </hint>
  </question>

<!-- question: 1258367  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_JSX_Rechteck_unter_Parabel</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[[[jsxgraph]]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-4, 6, 4, -2], axis: true, keepaspectratio:true, showcopyright: false});

var fx = function(x){return -x*x+5};
var graph = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});

var curve = board.create('line', [[0, 0], [2.23, 0]], {straightFirst:false, straightLast:false, fixed: true, visible: false, name: 'test'});

var p = board.create('glider', [1.3, 0, curve]);
var q = board.create('point', [function () { return p.X(); } , function () {return -p.X()*p.X() + 5 ; }], {visible: false});
var r = board.create('point', [function () { return -p.X(); } , function () {return -p.X()*p.X() + 5 ; }], {visible: false});
var s = board.create('point', [function () { return -p.X(); } , 0], {visible: false});


var pol = board.create('polygon', [p, q, r, s], {strokecolor:'#00a0a2', color:'#f0db9f'});

var txt = board.create('text', [2, 4, function () {
                  return "A(Rechteck) = " + (Number((2*p.X()* (-p.X()*p.X() + 5))).toFixed(2));
                   }], {fontSize: 14});

board.unsuspendUpdate();
[[/jsxgraph]]
<p> [[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>0.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 1:</b><br>
Berechnen Sie zuerst den Scheitelpunkt der Funktion \(f(x)\). Verwenden Sie hierzu die gerade eingeführte Formel
\(S=(-s,d)=(-\frac{b}{2a}, - \frac{b^2}{4a^2} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 2:</b><br>
In diesem Beispiel gilt \(a=1\). Die Berechnungsformel für den Scheitelpunkt vereinfacht sich zu \(S=(-s,d)=(-\frac{b}{2}, - \frac{b^2}{4} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 3 - Musterlösung:</b><br>
Über die quadratische Ergänzung formen wir die Funktion um:
\[f(x)=x^2-4x+1=(x-2)^2-3\]
Den Scheitelpunkt können wir dann ablesen. Er lautet \(S=(2,-3)\). Über die Schieberegler muss dann dieser Scheitelpunkt eingestellt werden.

<div class="container">

<div  style="width: 50%;">
<jsxgraph>
    var board = JXG.JSXGraph.initBoard(BOARDID, {
        boundingbox:[-5,5,5,-5],
        axis: true,
        showCopyright: false,
        showNavigation: false,
        pan: {
            enabled: false
        },
        zoom: {
            enabled: false
        }
    });
var fx = function(x){return (x-2)*(x-2) - 3};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
</jsxgraph>
</div></div>]]></text>
    </hint>
  </question>

<!-- question: 1258385  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_XX_JSX_Ortskurve_Hochpunkt</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[[[jsxgraph]]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-14, 10, 14, -10], axis: true, keepaspectratio:true, showcopyright: false});

var s = board.create('slider', [[10,-4], [12,-4], [-3, 2, 3]]);

var fx = function(x){return -1/(3*s.Value())*x*x*x+x*x-2/3*s.Value()*s.Value()};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
var p = board.create('glider',[function(){return 2*s.Value();}, function(){return 1/6*2*s.Value()*2*s.Value();}, curve], {trace:true});



board.unsuspendUpdate();
[[/jsxgraph]]
<p> [[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>0.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text></text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 1:</b><br>
Berechnen Sie zuerst den Scheitelpunkt der Funktion \(f(x)\). Verwenden Sie hierzu die gerade eingeführte Formel
\(S=(-s,d)=(-\frac{b}{2a}, - \frac{b^2}{4a^2} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 2:</b><br>
In diesem Beispiel gilt \(a=1\). Die Berechnungsformel für den Scheitelpunkt vereinfacht sich zu \(S=(-s,d)=(-\frac{b}{2}, - \frac{b^2}{4} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 3 - Musterlösung:</b><br>
Über die quadratische Ergänzung formen wir die Funktion um:
\[f(x)=x^2-4x+1=(x-2)^2-3\]
Den Scheitelpunkt können wir dann ablesen. Er lautet \(S=(2,-3)\). Über die Schieberegler muss dann dieser Scheitelpunkt eingestellt werden.

<div class="container">

<div  style="width: 50%;">
<jsxgraph>
    var board = JXG.JSXGraph.initBoard(BOARDID, {
        boundingbox:[-5,5,5,-5],
        axis: true,
        showCopyright: false,
        showNavigation: false,
        pan: {
            enabled: false
        },
        zoom: {
            enabled: false
        }
    });
var fx = function(x){return (x-2)*(x-2) - 3};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
</jsxgraph>
</div></div>]]></text>
    </hint>
  </question>

<!-- question: 1258432  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_XX_JSX_Tangente_an_Polynom_mit_Ableitung</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[[[jsxgraph]]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-5, 6, 5, -6], axis: true, keepaspectratio:true, showcopyright: false});

var fx = function(x){return {#f#}};
var dfx = function(x){return {#df#}};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3, visible:true});
var p = board.create('glider',[-3, 0, curve]);

var dcurve = board.create('functiongraph', [dfx, -4, function(){ return p.X();}], {strokecolor:'#007bad', strokeWidth: 2, visible:true});

var d = board.create('derivative', [curve], {strokecolor:'#007bad', strokeWidth: 2, visible: false});
var dp = board.create('glider',[function(){ return p.X();}, function(){ return JXG.Math.Numerics.D(fx)(p.X());}, d], {visible: true});

var line = board.create('line', [p, dp], {straightFirst:false, straightLast:false, dash: 2, strokecolor:'#007bad', strokeWidth: 2, visible: true});

var t = board.create('tangent', [p], {strokecolor:'#ff4d4d', strokeWidth: 2, visible: true, name:'Tangente'});

var txt = board.create('text', [-6, 3, function () {
                  return "f'(a) = " + (Number(JXG.Math.Numerics.D(fx)(p.X())).toFixed(2));
                   }], {fontSize: 16, fixed:true});

board.unsuspendUpdate();
[[/jsxgraph]]
<p> [[input:ans1]] [[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>0.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>f: 0.05*x*(x+3)*(x+2)*(x-2)*(x-4);
df: diff(f, x, 1);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 1:</b><br>
Berechnen Sie zuerst den Scheitelpunkt der Funktion \(f(x)\). Verwenden Sie hierzu die gerade eingeführte Formel
\(S=(-s,d)=(-\frac{b}{2a}, - \frac{b^2}{4a^2} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 2:</b><br>
In diesem Beispiel gilt \(a=1\). Die Berechnungsformel für den Scheitelpunkt vereinfacht sich zu \(S=(-s,d)=(-\frac{b}{2}, - \frac{b^2}{4} + c)\).]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<b>Hinweis 3 - Musterlösung:</b><br>
Über die quadratische Ergänzung formen wir die Funktion um:
\[f(x)=x^2-4x+1=(x-2)^2-3\]
Den Scheitelpunkt können wir dann ablesen. Er lautet \(S=(2,-3)\). Über die Schieberegler muss dann dieser Scheitelpunkt eingestellt werden.

<div class="container">

<div  style="width: 50%;">
<jsxgraph>
    var board = JXG.JSXGraph.initBoard(BOARDID, {
        boundingbox:[-5,5,5,-5],
        axis: true,
        showCopyright: false,
        showNavigation: false,
        pan: {
            enabled: false
        },
        zoom: {
            enabled: false
        }
    });
var fx = function(x){return (x-2)*(x-2) - 3};
var curve = board.create('functiongraph', [fx], {strokecolor:'#00a0a2', strokeWidth: 3});
</jsxgraph>
</div></div>]]></text>
    </hint>
  </question>

<!-- question: 1258211  -->
  <question type="stack">
    <name>
      <text>Newton-Verfahren-Anwendung (Update)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Ziel dieser Aufgabe ist es, das Newtonverfahren anzuwenden und die Herkunft der Iterationsformel erklären zu können.</p>
<p>Lesen Sie sich zuerst im Skript in der Anwendung 4.3.11 (S. 96)&nbsp;die Erläuterung zum Newtonverfahren durch. Die Graphik veranschaulicht das Vorgehen.</p>
<p style="text-align: center;"><img src="@@PLUGINFILE@@/Newton-Screenshot.png" alt="" role="presentation" style="width:50%"><br></p>
<p>Wir betrachten nun die Funktion \(f: \mathbb{R} \to \mathbb{R}\) mit \(f(x)=x^3-x-1\) und suchen ihre Nullstellen. &nbsp;</p>
<p>Beantworten dann die nachstehenden Fragen:</p>
<p><span style="font-size: 0.9375rem;">Was wissen wir über die Zahl der Nullstellen von \(f\)? [[input:ans1]]</span><br></p>
<p>Als Startwert für das Newtonverfahren wird \(x_0=1\) ausgewählt, da [[input:ans2]]<br></p>
<p>Berechnen Sie \(f(x_0)=\) [[input:ans3]]<br></p>
<p>Berechnen Sie \(f'(x_0)=\)&nbsp;[[input:ans4]]<br></p>
<p>Berechnen Sie \(x_1=\)&nbsp;[[input:ans5]] (Eingabe als Bruch)<br></p>
<p><span style="font-size: 0.9375rem;">Berechnen Sie \(x_2=\)&nbsp;[[input:ans6]]&nbsp;&nbsp;(Eingabe als Bruch)</span><br></p>
<p>Der gefundene Wert \(x_2\) ist bereits eine sehr gute Näherung der Nullstelle, denn \(f(x_2)&lt;0.2\).</p>
<p><span style="font-size: 0.9375rem;">[[validation:ans1]]&nbsp;</span><span style="font-size: 0.9375rem;">[[validation:ans2]]&nbsp;</span><span style="font-size: 0.9375rem;">[[validation:ans3]]&nbsp;</span><span style="font-size: 0.9375rem;">[[validation:ans4]]&nbsp;</span>
    <span style="font-size: 0.9375rem;">[[validation:ans5]]&nbsp;</span><span style="font-size: 0.9375rem;">[[validation:ans6]]</span></p>
<p><span style="font-size: 0.9375rem;"><br></span></p>]]></text>
<file name="Newton-Screenshot.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>Newton</idnumber>
    <stackversion>
      <text>2020120600</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[Liste1: [[1,true,"Es existiert mindestens eine."],[2,false, "Es sind drei, da f ein Polynom 3. Grades ist."],[3,false,"Man kann keine Aussage treffen."]];
Liste2: [[1,false,"es wichtig ist, kleine Startwerte zu wählen."],[2,true, "f(0)<0 und f(2)>0 gilt"]];
ta3: -1;
ta4: 2;
ta5: 3/2;
ta6: 31/23;]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text>ta1</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>Richtige Antwort, gut gemacht!</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>Ihre Antwort ist teilweise korrekt.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>Falsche Antwort.</text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>Liste1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>dropdown</type>
      <tans>Liste2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>ta3</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>ta4</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans5</name>
      <type>algebraic</type>
      <tans>ta5</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans6</name>
      <type>algebraic</type>
      <tans>ta6</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>3.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>1</tans>
        <testoptions>v</testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.1000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Leider falsch. Wir wissen bereits, dass es höchstens 3 Nullstelle werde können und dass wegen des ungeraden Polynomgrads es mindestens eine ist.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>2</tans>
        <testoptions>v</testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.1000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Der Startpunkt muss in der Nähe der Nullstelle liegen. Ob er groß oder klein ist, ist dabei unerheblich.</p><p><br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>ta3</tans>
        <testoptions>3</testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.1000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Sie müssen \(f(x_0)=f(1)=1^3-1-1=-1\) berechnen.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>ta4</tans>
        <testoptions>v</testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>4</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>4</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Sie müssen \(f'(x)=3x^2-1\) und \(f'(x_0)=f'(1)=3\cdot 1^2-1=2\) berechnen.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>4</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans5</sans>
        <tans>ta5</tans>
        <testoptions>v</testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.2000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>5</truenextnode>
        <trueanswernote>prt1-5-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>5</falsenextnode>
        <falseanswernote>prt1-5-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Sie müssen \(x_1=x_0-\frac{f(x_0)}{f'(x_0)}=1-\frac{-1}{2}=\frac{3}{2}\) berechnen.<br></p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>5</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans6</sans>
        <tans>ta6</tans>
        <testoptions>k</testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.3000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-6-T</trueanswernote>
        <truefeedback format="html">
          <text></text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-6-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Sie müssen \(x_2=x_1-\frac{f(x_1)}{f'(x_1)}=\frac{3}{2} - \frac{7}{46}\) berechnen.<br></p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/MA_LE12/Variante nur im Test</text>
    </category>
    <info format="markdown">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 1258261  -->
  <question type="stack">
    <name>
      <text>MA_LE12_15b_Var_n-te_Ableitungen (Variante1)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Berechnen Sie die ersten drei Ableitungen der folgenden Funktion:
\[f(x)=x^n, \quad n \in \mathbb{N}\]</p>
<p>\(f'(x)=\) [[input:ans1]] [[validation:ans1]]</p>
<p>\(f''(x)=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(f'''(x)=\) [[input:ans3]] [[validation:ans3]]</p>
[[feedback:prt1]]

<p>Fällt Ihnen ein Muster in den Ableitungen auf?
Bestimmen Sie nun auch die \(n\)-te Ableitung:</p>
<p>\(f^{\left(n\right)}(x)=\) [[input:ans4]] [[validation:ans4]]</p>
[[feedback:prt2]]

<p><i>Hinweis: Möglicherweise wollen Sie Ausdrücke der Form \( 4\cdot 3\cdot 2\cdot 1 \) zusammenfassen. Mit der Funktion 'Fakultät' ist dies möglich: \( k!:=1\cdot 2\cdot 3 \cdots (k-1) \cdot k \).</i></p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_15b_Var</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>f: x^n;
tans1: n*x^(n-1);
tans2: n*(n-1)*x^(n-2);
tans3: n*(n-1)*(n-2)*x^(n-3);
tans4: (n!);</text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tans2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>tans3</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>tans4</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 1. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 1. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 2. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 2. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>tans3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 3. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 3. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>tans4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die \(n\)-te Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die \(n\)-te Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 1258391  -->
  <question type="stack">
    <name>
      <text>MA_LE12_17Var2_hinreichendes Kriterium (Variante zum Üben)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei die Funktion
\[f: \mathbb{R} \to \mathbb{R} \quad \text{mit} \quad f(x)={@f@}\]</p>
<p>Rechnen Sie nach, dass in \(x_0={@a@}\) ein kritischer Punkt vorliegt und überprüfen Sie, ob in diesem Punkt ein lokales Extremum vorliegt.</p>
<p>In \(x_0={@a@}\) liegt [[input:ans1]].  [[validation:ans1]]</p>

[[feedback:prt1]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_17Var2</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,true, "ein lokales Minimum vor"],[2,false,"ein lokales Maximum vor"],[3,false,"kein lokales Extremum vor"] ];

a: rand(3)+1;
b: rand(4)+4;
c: rand(7)-5;

f: 2*x^3+3*(b-a)*x^2-6*a*b*x+c

L1:random_permutation(L1);]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text>L1:random_permutation(L1);</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text>Ihre Lösung ist richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text>Leider ist Ihre Lösung falsch.</text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 1258257  -->
  <question type="stack">
    <name>
      <text>MA_LE12_20Var1_Graphen_Eigenschaften_zuordnen (Variante1)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei eine Funktion \(f\), von der Sie bereits die folgenden Eigenschaften kennen:</p>
<ul>
<li>
\(D=\mathbb{R}\setminus\{3\}\)
</li>
<li>
\(f(-3)=f(-1)=f(2)=0\)
</li>
<li>
\(f'(-2)=f'(1)=0\)
</li>
<li>
\(f''(-2)<0\) und \(f''(1)>0\)
</li>
</ul>

<p>Wie könnte eine Skizze der Funktion \(f\) aussehen? Wählen Sie einen passenden Graphen aus: </p>
<p>[[input:ans1]] [[validation:ans1]]</p>
<div class="row row-cols-2 row-cols-xl-3">
  <div class="col" markdown="1">![Aufgabe_Graph1](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20a-grafik-graph-aufgabe.png?v=1707404589) {.img-fluid}<figcaption class="figure-caption text-center">Graph a)</figcaption></div>
  <div class="col" markdown="1">![Aufgabe_Graph3](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20b-grafik-graph-aufgabe.png?v=1707404663) {.img-fluid}<figcaption class="figure-caption text-center">Graph b)</figcaption></div>
  <div class="col" markdown="1">![Aufgabe_Graph3](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20c-grafik-graph-aufgabe.png?v=1707404742) {.img-fluid}<figcaption class="figure-caption text-center">Graph c)</figcaption></div></div>
[[feedback:prt1]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_20Var1</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,false,"Graph a)"],[2, true,"Graph b)"],[3, false,"Graph c)"],[4, false,"Keiner der Graphen passt"]];]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>2</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Prima, Ihre Lösung ist richtig!</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Leider ist Ihre Lösung falsch. Versuchen Sie es noch einmal!</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p>Gehen Sie die Eigenschaften der Funktion der Reihe nach durch und überprüfen, welche davon die Graphen a), b) und c) erfüllen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p>Nicht durch jede Eigenschaft können Sie einen Graphen ausschließen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>
<p>
Die Angaben zu den Nullstellen und kritischen Punkten sind für alle drei Graphen erfüllt. Der eingeschränkte Definitionsbereich impliziert, dass Graph c) ausgeschlossen werden kann. Die Informationen über die 2. Ableitungen in den kritischen Punkten legen aber eindeutig fest, dass nur Graph b) passt.</p>]]></text>
    </hint>
  </question>

<!-- question: 1258238  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_36c_deL'Hospital-Var3</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p></p><p>Bestimmen Sie mit Hilfe der Regel von de l'Hospital den folgenden Grenzwert:</p><p>\(\lim\limits_{x\to 0} \frac{\sin({@b@}x)}{e^{{@a@}x}-1}= \)[[input:ans1]]</p><p><br></p><br><p></p><p><br></p><p><br></p><p>&nbsp;[[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>a: rand(4)+2;
b: rand(3)+2;
tans1: b/a;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text>\(\lim\limits_{x\to 0} \frac{\sin({@b@}x)}{e^{{@a@}x}-1}\)</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Sie haben den Grenzwert korrekt bestimmt!<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Leider ist ihr Grenzwert falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1758188644</deployedseed>
    <deployedseed>1571037552</deployedseed>
    <deployedseed>1943722763</deployedseed>
    <deployedseed>877208337</deployedseed>
    <deployedseed>1786971854</deployedseed>
    <deployedseed>1969536140</deployedseed>
    <deployedseed>1057561883</deployedseed>
    <deployedseed>1526505477</deployedseed>
    <deployedseed>2146332014</deployedseed>
    <deployedseed>854417348</deployedseed>
    <deployedseed>1840199889</deployedseed>
    <deployedseed>1196450776</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <testinput>
        <name>ans1</name>
        <value>tans1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <testinput>
        <name>ans1</name>
        <value>0</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-1-F</expectedanswernote>
      </expected>
    </qtest>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/MA_LE12/Aufgaben zur Übung</text>
    </category>
    <info format="markdown">
      <text></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 1258387  -->
  <question type="ddwtos">
    <name>
      <text>MAT_LE12_29_Vorgehen_Extremwertaufgabe (Kopie zur Übung)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p> Beim Lösen einer Extremwertaufgabe gehen wir wie folgt vor:<br>
<ul>
<li>Zuerst wird eine [[1]] aufgestellt. Dies ist eine Formel, die mehrere Variablen enthält und deren Wert minimiert oder maximiert werden soll. </li>
<li>Dann wird eine [[2]] aufgestellt. Wenn die [[1]] mehr als zwei Variablen enthält, dann reicht eine [[2]] nicht aus, es werden mehrere benötigt.</li>
<li>Nun wird die [[2]] (oder auch mehrere) umgeformt und in die [[1]] so eingesetzt, dass eine [[3]] entsteht, die nur noch von einer Variablen abhängt. </li>
<li>Für die [[3]] wird ein zum Problem passender, sinnvoller Definitionsbereich gewählt. </li>
<li>Mit der [[4]] werden kritische Punkte der [[3]] bestimmt und mit der [[7]] auf Extrema untersucht. </li>
<li>Ist ein [[5]] im Definitionsbereich gefunden, so wird über das Verhalten am Rand des Definitionsbereiches überprüft, ob es sich um ein [[6]] handelt. </li>
<li> Ist ein [[6]] gefunden, können über das Einsetzen in die [[2]] (oder auch mehrere) die anderen Variablen berechnet werden. </li>
<li>Werden diese gefundenen Lösungen in die [[1]] eingesetzt, so erhalten wir den Wert des gesuchten Optimums.</li>
</ul>
</p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>4.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber>MAT_LE12_29_zurÜbung</idnumber>
    <shuffleanswers>1</shuffleanswers>
    <correctfeedback format="markdown">
      <text><![CDATA[<p> Sehr gut! Ihre Antworten sind richtig. </p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="markdown">
      <text><![CDATA[<p> Ihre Antworten sind teilweise richtig. Versuchen Sie es noch einmal!</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="markdown">
      <text><![CDATA[<p> Ihre Antworten sind leider falsch. Versuchen Sie es noch einmal! </p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <dragbox>
      <text>Hauptbedingung</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>Nebenbedingung</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>Zielfunktion</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>1. Ableitung</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>lokales Extremum</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>globales Extremum</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <dragbox>
      <text>2. Ableitung</text>
      <group>1</group>
      <infinite/>
    </dragbox>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 1: </b> </p>
<p> Verschieben Sie die Begriffe in die passenden Felder. Die einzelnen Begriffe werden unterschiedlich oft gebraucht. </p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 2: </b> </p>
<p> Schauen Sie in die Beispiele in diesem Abschnitt. Dort werden die gesuchten Begriffe verwendet. </p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<p> <b> Hinweis 3 - Musterlösung: </b> </p>
<p> Beim Lösen einer Extremwertaufgabe gehen wir wie folgt vor:<br>
<ul>
<li>Zuerst wird eine <b>Hauptbedingung</b> aufgestellt. Dies ist eine Formel, die mehrere Variablen enthält und deren Wert minimiert oder maximiert werden soll. </li>
<li>Dann wird eine <b>Nebenbedingung</b> aufgestellt. Wenn die <b>Hauptbedingung</b> mehr als zwei Variablen enthält, dann reicht eine <b>Nebenbedingung</b> nicht aus, es werden mehrere benötigt.</li>
<li>Nun wird die <b>Nebenbedingung</b> (oder auch mehrere) umgeformt und in die <b>Hauptbedingung</b> so eingesetzt, dass eine <b>Zielfunktion</b> entsteht, die nur noch von einer Variablen abhängt. </li>
<li>Für die <b>Zielfunktion</b> wird ein zum Problem passender, sinnvoller Definitionsbereich gewählt. </li>
<li>Mit der <b>1. Ableitung</b> werden kritische Punkte der <b>Zielfunktion</b> bestimmt und mit der <b>2. Ableitung</b> auf Extrema untersucht. </li>
<li>Ist ein <b>lokales Extremum</b> im Definitionsbereich gefunden, so wird über das Verhalten am Rand des Definitionsbereiches überprüft, ob es sich um ein <b>globales Extremum</b> handelt. </li>
<li> Ist ein <b>globales Extremum</b>  gefunden, können über das Einsetzen in die <b>Nebenbedingung</b> (oder auch mehrere) die anderen Variablen berechnet werden. </li>
<li>Werden diese gefundenen Lösungen in die <b>Hauptbedingung</b> eingesetzt, so erhalten wir den Wert des gesuchten Optimums.</li>
</ul>
</p>]]></text>
    </hint>
  </question>

<!-- question: 1258235  -->
  <question type="multichoice">
    <name>
      <text>MAT_LE12_35_Übung_w/f_Hospital</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><p>Mit der Regel von de l’Hospital können nicht die Grenzwerte beliebiger differenzierbarer Quotienten berechnet werden.</p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Die Antwort ist richtig.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Die Antwort ist teilweise richtig.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Die Antwort ist falsch.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>Falsch<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[Wahr<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
  </question>

<!-- question: 1258388  -->
  <question type="stack">
    <name>
      <text>MA_LE12_12Var_kritische Punkte (Variante zur Übung)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei die Funktion
\[f: \mathbb{R} \to \mathbb{R} \quad \text{mit} \quad f(t)={@f@}\]</p>
<p>Berechnen Sie Menge \(K\) der kritischen Punkte dieser Funktion:</p>
<p>\(K=\) [[input:ans1]] [[validation:ans1]]</p>
<p> <i>Geben Sie Ihre Lösung als Menge an, z.B. <code>{a,b}</code></i></p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_12Var</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>a: 2*(rand(5)+1);
b: rand(8)+1;
c: 2*rand(2)-1;
l: (-1)*c*a/2;
ta1: set(l);
f: t^2+c*a*t+b;</text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text>f;</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ta1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ta1</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text>Ihre Lösung ist richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text>Leider ist Ihre Lösung falsch.</text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 1258262  -->
  <question type="stack">
    <name>
      <text>MA_LE12_15b_Var2_n-te_Ableitungen (Variante2)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Berechnen Sie die ersten drei Ableitungen der folgenden Funktion:
\[f(x)=\frac{1}{x}\]</p>
<p>\(f'(x)=\) [[input:ans1]] [[validation:ans1]]</p>
<p>\(f''(x)=\) [[input:ans2]] [[validation:ans2]]</p>
<p>\(f'''(x)=\) [[input:ans3]] [[validation:ans3]]</p>
[[feedback:prt1]]

<p>Fällt Ihnen ein Muster in den Ableitungen auf?
Bestimmen Sie nun auch die \(n\)-te Ableitung:</p>
<p>\(f^{\left(n\right)}(x)=\) [[input:ans4]] [[validation:ans4]]</p>
[[feedback:prt2]]

<p><i>Hinweis: Möglicherweise wollen Sie Ausdrücke der Form \( 4\cdot 3\cdot 2\cdot 1 \) zusammenfassen. Mit der Funktion 'Fakultät' ist dies möglich: \( k!:=1\cdot 2\cdot 3 \cdots (k-1) \cdot k \).</i></p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_15b_Var2</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>tans1: -1/x^2;
tans2: 2/x^3;
tans3: -6/x^4;
tans4: (-1)^n*((n-1)!)*1/x^(n-1);</text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>tans2</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans3</name>
      <type>algebraic</type>
      <tans>tans3</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <input>
      <name>ans4</name>
      <type>algebraic</type>
      <tans>tans4</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty></truepenalty>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 1. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 1. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>tans2</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 2. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 2. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans3</sans>
        <tans>tans3</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.25</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die 3. Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die 3. Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans4</sans>
        <tans>tans4</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Die \(n\)-te Ableitung ist richtig.</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Die \(n\)-te Ableitung ist leider falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 1258390  -->
  <question type="stack">
    <name>
      <text>MA_LE12_17Var1_hinreichendes Kriterium (Variante zum Üben)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei die Funktion
\[f: \mathbb{R} \to \mathbb{R} \quad \text{mit} \quad f(x)={@f@}\]</p>
<p>Rechnen Sie nach, dass in \(x_0=-{@b@}\) ein kritischer Punkt vorliegt und überprüfen Sie, ob in diesem Punkt ein lokales Extremum vorliegt.</p>
<p>In \(x_0=-{@b@}\) liegt [[input:ans1]].  [[validation:ans1]]</p>

[[feedback:prt1]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_17_Var1</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,true, "ein lokales Maximum vor"],[2,false,"ein lokales Minimum vor"],[3,false,"kein lokales Extremum vor"] ];

a: rand(3)+1;
b: rand(4)+4;
c: rand(7)-5;

f: 2*x^3+3*(b-a)*x^2-6*a*b*x+c

L1:random_permutation(L1);]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text>L1:random_permutation(L1);</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text>Ihre Lösung ist richtig!</text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text>Leider ist Ihre Lösung falsch.</text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 1258258  -->
  <question type="stack">
    <name>
      <text>MA_LE12_20Var2_Graphen_Eigenschaften_zuordnen (Variante2)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei eine Funktion \(f\), von der Sie bereits die folgenden Eigenschaften kennen:</p>
<ul>
<li>
\(D=\mathbb{R}\)
</li>
<li>
\(f(-3)=f(-1)=f(2)=0\)
</li>
<li>
\(f'(-2)=f'(1)=0\)
</li>
<li>
\(f''(-2)<0\) und \(f''(1)>0\)
</li>
</ul>

<p>Wie könnte eine Skizze der Funktion \(f\) aussehen? Wählen Sie einen passenden Graphen aus: </p>
<p>[[input:ans1]] [[validation:ans1]]</p>
<div class="row row-cols-2 row-cols-xl-3">
  <div class="col" markdown="1">![Aufgabe_Graph1](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20a-grafik-graph-aufgabe.png?v=1707404589) {.img-fluid}<figcaption class="figure-caption text-center">Graph a)</figcaption></div>
  <div class="col" markdown="1">![Aufgabe_Graph3](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20b-grafik-graph-aufgabe.png?v=1707404663) {.img-fluid}<figcaption class="figure-caption text-center">Graph b)</figcaption></div>
  <div class="col" markdown="1">![Aufgabe_Graph3](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20c-grafik-graph-aufgabe.png?v=1707404742) {.img-fluid}<figcaption class="figure-caption text-center">Graph c)</figcaption></div></div>
[[feedback:prt1]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_20Var2</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,false,"Graph a)"],[2, false,"Graph b)"],[3, true,"Graph c)"],[4, false,"Keiner der Graphen passt"]];]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>3</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Prima, Ihre Lösung ist richtig!</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Leider ist Ihre Lösung falsch. Versuchen Sie es noch einmal!</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p>Gehen Sie die Eigenschaften der Funktion der Reihe nach durch und überprüfen, welche davon die Graphen a), b) und c) erfüllen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p>Nicht durch jede Eigenschaft können Sie einen Graphen ausschließen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>
<p>
Die Angaben zu den Nullstellen und kritischen Punkten sind für alle drei Graphen erfüllt. Der Definitionsbereich impliziert, dass die Graphen a) und b) ausgeschlossen werden können. Die Informationen über die 2. Ableitungen in den kritischen Punkten legen aber eindeutig fest, dass der Graph c) passt.</p>]]></text>
    </hint>
  </question>

<!-- question: 1258259  -->
  <question type="stack">
    <name>
      <text>MA_LE12_20Var3_Graphen_Eigenschaften_zuordnen (Variante3)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei eine Funktion \(f\), von der Sie bereits die folgenden Eigenschaften kennen:</p>
<ul>
<li>
\(D=\mathbb{R}\)
</li>
<li>
\(f(-3)=f(-1)=f(2)=0\)
</li>
<li>
\(f'(-2)=f'(1)=0\)
</li>
<li>
\(f''(-2)>0\) und \(f''(1)<0\)
</li>
</ul>

<p>Wie könnte eine Skizze der Funktion \(f\) aussehen? Wählen Sie einen passenden Graphen aus: </p>
<p>[[input:ans1]] [[validation:ans1]]</p>
<div class="row row-cols-2 row-cols-xl-3">
  <div class="col" markdown="1">![Aufgabe_Graph1](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20a-grafik-graph-aufgabe.png?v=1707404589) {.img-fluid}<figcaption class="figure-caption text-center">Graph a)</figcaption></div>
  <div class="col" markdown="1">![Aufgabe_Graph3](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20b-grafik-graph-aufgabe.png?v=1707404663) {.img-fluid}<figcaption class="figure-caption text-center">Graph b)</figcaption></div>
  <div class="col" markdown="1">![Aufgabe_Graph3](/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-20c-grafik-graph-aufgabe.png?v=1707404742) {.img-fluid}<figcaption class="figure-caption text-center">Graph c)</figcaption></div></div>
[[feedback:prt1]]]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_20Var3</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,false,"Graph a)"],[2, false,"Graph b)"],[3, false,"Graph c)"],[4, true,"Keiner der Graphen passt"]];]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text></text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>dropdown</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>4</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Prima, Ihre Lösung ist richtig!</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Leider ist Ihre Lösung falsch. Versuchen Sie es noch einmal!</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 1:</strong><br>
<p>Gehen Sie die Eigenschaften der Funktion der Reihe nach durch und überprüfen, welche davon die Graphen a), b) und c) erfüllen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 2:</strong><br>
<p>Nicht durch jede Eigenschaft können Sie einen Graphen ausschließen.</p>]]></text>
    </hint>
    <hint format="markdown">
      <text><![CDATA[<strong>Hinweis 3 - Musterlösung:</strong><br>
<p>
Die Angaben zu den Nullstellen und kritischen Punkten sind für alle drei Graphen erfüllt. Der Definitionsbereich impliziert, dass die Graphen a) und b) ausgeschlossen werden können. Die Informationen über die 2. Ableitungen in den kritischen Punkten besagen aber, dass auch der Graph c) nicht passt. Die korrekte Lösung ist, dass keiner der Graphen passt.</p>]]></text>
    </hint>
  </question>

<!-- question: 1258392  -->
  <question type="stack">
    <name>
      <text>MA_LE12_21k_Eigenschaften_ablesen (Kopie zur Übung)</text>
    </name>
    <questiontext format="markdown">
      <text><![CDATA[<p>Gegeben sei der Graph der folgenden Funktion \(f\):</p>
<center><img src="/theme/boost_union_vorsprung/pix/static/mathematik/le12/mat-le12-21-grafik-graph-aufgabe.png" width="50%"></center>

<p>Welche Eigenschaften von \(f\) können Sie aus dem Graphen ablesen? Kreuzen Sie die wahren Aussagen an:</p>
<p>[[input:ans1]] [[validation:ans1]]</p>
<p><i>Überlegen Sie, welche weiteren Eigenschaften Sie aus dem Graphen noch ablesen können?</i></p>]]></text>
    </questiontext>
    <generalfeedback format="markdown">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber>MA_LE12_21zurÜbung</idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[L1: [[1,true, "Der Definitionsbereich ist \\(D=\\mathbb{R}.\\)"],[2,false, "Die Funktion ist punktsymmetrisch."],[3,true, "Die Funktion ist achsensymmetrisch."],[4,false, "Die Nullstellenmenge ist \\(N=\\{-3,-1,0,2,3\\}\\)."],[5,true, "In \\(x_0=0\\) liegt ein kritischer Punkt vor."], [6,false, "Es gibt drei lokale Minima."],  [8,true, "\\(\\lim\\limits_{x \\to \\infty}f(x)=-\\infty\\)"]];]]></text>
    </questionvariables>
    <specificfeedback format="markdown">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text></text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="markdown">
      <text><![CDATA[[stashdrop secret="xMLHVf" image]]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="markdown">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="markdown">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>checkbox</type>
      <tans>L1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>SansM: setify(ans1);
TansM: set(1,3,5,8);</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>SansM</sans>
        <tans>TansM</tans>
        <testoptions></testoptions>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="markdown">
          <text><![CDATA[<p>Prima, Ihre Lösung ist richtig!</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="markdown">
          <text><![CDATA[<p>Leider ist Ihre Lösung falsch. </p>]]></text>
        </falsefeedback>
      </node>
    </prt>
  </question>

<!-- question: 1258236  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_36a_deL'Hospital-Var1</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p></p><p>Bestimmen Sie mit Hilfe der Regel von de l'Hospital den folgenden Grenzwert:</p><p>\(\lim\limits_{x\to 1} \frac{{@b@}\ln x}{x^{@a@}-1}= \)[[input:ans1]]</p><p><br></p><br><p></p><p><br></p><p><br></p><p>&nbsp;[[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>a: rand(4)+2;
b: rand(3)+2;
tans1: b/a;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text>\(\lim\limits_{x\to 1} \frac{{@b@}\ln x}{x^{@a@}-1}\)</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Ihr Grenzwert ist richtig!</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Leider ist Ihr Grenzwert falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1574441536</deployedseed>
    <deployedseed>1102370711</deployedseed>
    <deployedseed>1031425712</deployedseed>
    <deployedseed>170110885</deployedseed>
    <deployedseed>1568121878</deployedseed>
    <deployedseed>51249429</deployedseed>
    <deployedseed>2050520272</deployedseed>
    <deployedseed>1216721671</deployedseed>
    <deployedseed>1342010832</deployedseed>
    <deployedseed>1497221269</deployedseed>
    <deployedseed>849958725</deployedseed>
    <deployedseed>84212966</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <testinput>
        <name>ans1</name>
        <value>tans1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <testinput>
        <name>ans1</name>
        <value>0</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-1-F</expectedanswernote>
      </expected>
    </qtest>
  </question>

<!-- question: 1258237  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_36b_deL'Hospital-Var2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p></p><p>Bestimmen Sie mit Hilfe der Regel von de l'Hospital den folgenden Grenzwert:</p><p>\(\lim\limits_{x\to 1} \frac{x^{@a@}-1}{{@b@}\ln x}= \)[[input:ans1]]</p><p><br></p><br><p></p><p><br></p><p><br></p><p>&nbsp;[[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>a: rand(4)+2;
b: rand(3)+2;
tans1: a/b;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text>\(\lim\limits_{x\to 1} \frac{x^{@a@}-1}{{@b@}\ln x}\)</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Sie haben den Grenzwert korrekt bestimmt!<br></p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Leider ist ihr Grenzwert falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>678364496</deployedseed>
    <deployedseed>1365562003</deployedseed>
    <deployedseed>69560234</deployedseed>
    <deployedseed>1751927822</deployedseed>
    <deployedseed>1888963496</deployedseed>
    <deployedseed>859417999</deployedseed>
    <deployedseed>617338544</deployedseed>
    <deployedseed>664239838</deployedseed>
    <deployedseed>322185964</deployedseed>
    <deployedseed>1467039596</deployedseed>
    <deployedseed>183795485</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <testinput>
        <name>ans1</name>
        <value>tans1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <testinput>
        <name>ans1</name>
        <value>0</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-1-F</expectedanswernote>
      </expected>
    </qtest>
  </question>

<!-- question: 1258239  -->
  <question type="stack">
    <name>
      <text>MAT_LE12_36d_deL'Hospital-Var4</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p></p><p>Bestimmen Sie mit Hilfe der Regel von de l'Hospital den folgenden Grenzwert:</p><p>\(\lim\limits_{x\to 0} \frac{e^{{@a@}x}-1}{\sin({@b@}x)}= \)[[input:ans1]]</p><p><br></p><br><p></p><p><br></p><p><br></p><p>&nbsp;[[validation:ans1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>a: rand(4)+2;
b: rand(3)+2;
tans1: a/b;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text>\(\lim\limits_{x\to 0} \frac{e^{{@a@}x}-1}{\sin({@b@}x)}\)</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>tans1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>1</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>tans1</tans>
        <testoptions></testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>Sie haben den Grenzwert korrekt bestimmt!</p>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>Leider ist ihr Grenzwert falsch.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>688790778</deployedseed>
    <deployedseed>1182849629</deployedseed>
    <deployedseed>1865177865</deployedseed>
    <deployedseed>427379363</deployedseed>
    <deployedseed>1120179948</deployedseed>
    <deployedseed>766862570</deployedseed>
    <deployedseed>1811269481</deployedseed>
    <deployedseed>2041267707</deployedseed>
    <deployedseed>213102903</deployedseed>
    <deployedseed>208675028</deployedseed>
    <deployedseed>8970112</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <testinput>
        <name>ans1</name>
        <value>tans1</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
    <qtest>
      <testcase>2</testcase>
      <testinput>
        <name>ans1</name>
        <value>0</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>0.0000000</expectedscore>
        <expectedpenalty>0.1000000</expectedpenalty>
        <expectedanswernote>prt1-1-F</expectedanswernote>
      </expected>
    </qtest>
  </question>

<!-- question: 1258210  -->
  <question type="truefalse">
    <name>
      <text>MAT_LE12_37_Voraussetzung l'Hospital</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Mit Hilfe der Regel von l'Hospital erhält man</p>
<p>\[\lim\limits_{x\to -2} \frac{x^2+3x+2}{x^2+x-2} = \lim\limits_{x\to -2} \frac{2x+3}{2x+1} = \lim\limits_{x\to -2} \frac{2}{2} = 1.\]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p>Bei jeder Anwendung der Regel von de l'Hospital muss die Voraussetzung "0/0" oder "inf/inf" erfüllt sein. Das ist beim zweiten Gleichheitszeichen nicht der Fall.<br></p>]]></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p>Bei jeder Anwendung der Regel von de l'Hospital muss die Voraussetzung "0/0" oder "inf/inf" erfüllt sein. Das ist beim zweiten Gleichheitszeichen nicht der Fall.</p>]]></text>
      </feedback>
    </answer>
  </question>

</quiz>